[user]
	email = {{ .email }}
	name = {{ .name }}

[core]
  editor = vim
  autocrlf = input
  filemode = false
  eol = lf
  ignorecase = false

[alias]
  aa = add .
  acp = "!f() { git add -A && git commit -m \"$@\" && git push; }; f"
  amp = "!f() { git add -A && git commit --amend --no-edit && git push --force-with-lease; }; f"
  amend = commit --amend --no-edit
  as = "! GIT_SEQUENCE_EDITOR=: git rebase -i --autosquash"
  asd = "! git as develop"
  bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
  co = checkout
  cop = "!f() { git checkout $1; git pull; }; f"
  cgh = "!f() { git clone git@github.com:Shuunen/$1.git; code $1; }; f"
  f = fetch -va
  ff= merge --ff-only
  fr = "!f() { git fetch && git rebase origin/$@ && echo -e \"\n Branch rebased to origin $@ \n\" && git st; }; f"
  frd = "! git fr develop"
  l = log --pretty=format:'%C(yellow)%h%Cred%d %Creset%s%Cblue [%cn %ad]' --decorate --date=relative
  ll = log --pretty=format:'%C(yellow)%h%Cred%d %Creset%s%Cblue [%cn %ad]' --decorate --date=relative -5
  pf = push --force-with-lease
  pt = !git tag -l | xargs git tag -d && git fetch -t # prune local git tags that don't exist on remote
  rh = "!f() { git reset HEAD~$@ && echo -e \"\n You moved $@ commit(s) back \n\"; }; f"
  sps = "! git stash && git pull && git stash apply"
  st = status -sbu

{{- if eq .chezmoi.hostname "PF11-12Z" }}

[credential "https://sd-gitlab.cm-cic.fr"]
	provider = generic
[credential "http://proxy-web.cm-cic.fr:8080"]
	provider = generic
[credential "https://git-si.cm-cic.fr"]
	provider = generic
[credential "https://gitlab-si.cloud.cm-cic.fr"]
	provider = generic
[http]
  sslVerify = true
  sslCAInfo = "C:\\Users\\malekgu\\cmcic.ca-bundle" # ou sslBackend = schannel
{{- end }}
